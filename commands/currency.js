let objcodes = {
    "CAD": "Canadian Dollar ðŸ‡¨ðŸ‡¦",
    "HKD": "Honkgong Dollar ðŸ‡­ðŸ‡°",
    "ISK": "Icelandic Krona ðŸ‡®ðŸ‡¸",
    "PHP": "Philippine Peso ðŸ‡µðŸ‡­",
    "DKK": "Danish Krone ðŸ‡©ðŸ‡°",
    "HUF": "Hungarian Forint ðŸ‡­ðŸ‡º",
    "CZK": "Czech Koruna ðŸ‡¨ðŸ‡¿",
    "GBP": "Pound Sterling ðŸ‡¬ðŸ‡§",
    "RON": "Romanian Leu ðŸ‡·ðŸ‡´",
    "SEK": "Swedish Krona ðŸ‡¸ðŸ‡ª",
    "IDR": "Indonesian Rupiah ðŸ‡®ðŸ‡©",
    "INR": "Indian Rupee ðŸ‡®ðŸ‡³",
    "BRL": "Brazilian Real ðŸ‡§ðŸ‡·",
    "RUB": "Russian Ruble ðŸ‡·ðŸ‡º",
    "HRK": "Croatian Kuna ðŸ‡­ðŸ‡·",
    "JPY": "Japanese Yen ðŸ‡¯ðŸ‡µ",
    "THB": "Thai Baht ðŸ‡¹ðŸ‡­",
    "CHF": "Swiss Franc ðŸ‡¨ðŸ‡­",
    "EUR": "Euro ðŸ‡ªðŸ‡º",
    "MYR": "Malaysian Ringgit ðŸ‡²ðŸ‡¾",
    "BGN": "Bulgarian Lev ðŸ‡§ðŸ‡¬",
    "TRY": "Turkish Lira ðŸ‡¹ðŸ‡·",
    "CNY": "Chinese Yuan ðŸ‡¨ðŸ‡³",
    "NOK": "Norwegian Krone ðŸ‡³ðŸ‡´",
    "NZD": "New Zealand Dollar ðŸ‡³ðŸ‡¿",
    "ZAR": "South African Rand ðŸ‡¿ðŸ‡¦",
    "USD": "American Dollar ðŸ‡ºðŸ‡¸",
    "MXN": "Mexican Peso ðŸ‡²ðŸ‡½",
    "SGD": "Singapore Dollar ðŸ‡¸ðŸ‡¬",
    "AUD": "Australian Dollar ðŸ‡¦ðŸ‡º",
    "ILS": "Israeli New Shekel ðŸ‡®ðŸ‡±",
    "KRW": "South Korean Won ðŸ‡°ðŸ‡·",
    "PLN": "Polish Zloty ðŸ‡µðŸ‡±"
};
let codes = Object.getOwnPropertyNames(objcodes);
exports.name = `{PREFIX}${__filename.split(/[\\/]/).pop().slice(0,-3)}`;
exports.description = `Converts currencies, calculates them, etc.\nSupported currencies: ${codes.join(', ')}`;
exports.usage = `{PREFIX}${__filename.split(/[\\/]/).pop().slice(0,-3)} EUR to PLN\n{PREFIX}${__filename.split(/[\\/]/).pop().slice(0,-3)} 10 EUR to PLN`;
exports.perms = [false, false];

exports.run = (client, message) => {
    message.cmd = this;
    message.command(1, async () => {
        let {round} = require('../utils/timeFormatter');
        let num = 1;
        message.args[0] = message.args[0].replace(/,/g, ".");
        if (!isNaN(message.args[0])) num = message.args.shift();
        function wanted(){
            if (codes.some(x => x === message.args[0].toUpperCase())) return message.args[0].toUpperCase();
            return false;
        }
        function base(){
            if (!message.args[2]) return false;
            if (codes.some(x => x === message.args[2].toUpperCase())) return message.args[2].toUpperCase();
            return false;
        }
        if (!base() || !wanted()) throw `Unsupported currency or wrong currency format was provided!\nCheck \`${message.guild.prefix}help ${__filename.split(/[\\/]/).pop().slice(0,-3)}\` for more information.`;
        let apidata = await client.fetch(`https://api.exchangeratesapi.io/latest?base=${wanted()}`).then(data => data.json());
        let embed = {
            color: message.member.displayColor,
            timestamp: new Date(),
            footer: {
                text: message.author.tag,
                icon_url: message.author.avatarURL
            },
            description: `**${num}** ${objcodes[wanted()]} (${wanted()}) = **${round(num * apidata.rates[base()], 4)}** ${objcodes[base()]} (${base()})`
        }
        message.channel.send({embed:embed});
    });
}